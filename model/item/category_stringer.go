// Generated by: gen
// TypeWriter: stringer
// Directive: +gen on Category

package item

import (
	"fmt"
)

const (
	_Category_name_0 = "PotionAmulet"
	_Category_name_1 = "CoinsComestible"
	_Category_name_2 = "ToolWeaponGemSpellbook"
	_Category_name_3 = "WandHeavyIronBall"
	_Category_name_4 = "Ring"
	_Category_name_5 = "Scroll"
	_Category_name_6 = "Armor"
	_Category_name_7 = "IronChainBoulder"
)

var (
	_Category_index_0 = [...]uint8{0, 6, 12}
	_Category_index_1 = [...]uint8{0, 5, 15}
	_Category_index_2 = [...]uint8{0, 4, 10, 13, 22}
	_Category_index_3 = [...]uint8{0, 4, 17}
	_Category_index_4 = [...]uint8{0, 4}
	_Category_index_5 = [...]uint8{0, 6}
	_Category_index_6 = [...]uint8{0, 5}
	_Category_index_7 = [...]uint8{0, 9, 16}
)

func (i Category) String() string {
	switch {
	case 33 <= i && i <= 34:
		i -= 33
		return _Category_name_0[_Category_index_0[i]:_Category_index_0[i+1]]
	case 36 <= i && i <= 37:
		i -= 36
		return _Category_name_1[_Category_index_1[i]:_Category_index_1[i+1]]
	case 40 <= i && i <= 43:
		i -= 40
		return _Category_name_2[_Category_index_2[i]:_Category_index_2[i+1]]
	case 47 <= i && i <= 48:
		i -= 47
		return _Category_name_3[_Category_index_3[i]:_Category_index_3[i+1]]
	case i == 61:
		return _Category_name_4
	case i == 63:
		return _Category_name_5
	case i == 91:
		return _Category_name_6
	case 95 <= i && i <= 96:
		i -= 95
		return _Category_name_7[_Category_index_7[i]:_Category_index_7[i+1]]
	default:
		return fmt.Sprintf("Category(%d)", i)
	}
}
